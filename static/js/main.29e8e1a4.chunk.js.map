{"version":3,"sources":["Clock.tsx","App.tsx","index.tsx"],"names":["Clock","name","useState","Date","today","setToday","cName","setCName","useEffect","date","window","setInterval","console","info","toUTCString","slice","clearInterval","debug","className","App","clockName","setClockName","hasClock","setHasClock","handleRightClick","event","preventDefault","handleLeftClick","timerId","value","now","toString","getRandomName","addEventListener","removeEventListener","ReactDOM","render","document","getElementById"],"mappings":"oLAMaA,EAAyB,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACvC,EAA0BC,mBAAS,IAAIC,MAAvC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAA0BH,mBAASD,GAAnC,mBAAOK,EAAP,KAAcC,EAAd,KAsBA,OApBAC,qBAAU,WACR,IAAMC,EAAOC,OAAOC,aAAY,WAC9BN,EAAS,IAAIF,MAEbS,QAAQC,MAAK,IAAIV,MAAOW,cAAcC,OAAO,IAAK,MACjD,KAEH,OAAO,WACLL,OAAOM,cAAcP,MAEtB,IAEHD,qBAAU,WACJP,IAASK,IAEXM,QAAQK,MAAR,qBAA4BhB,IAC5BM,EAASN,MAEV,CAACA,IAGF,sBAAKiB,UAAU,QAAf,UACE,wBAAQA,UAAU,cAAlB,SACGjB,IAGF,YAED,sBAAMiB,UAAU,cAAhB,SACGd,EAAMU,cAAcC,OAAO,IAAK,SC7BlC,IAAMI,EAAgB,WAC3B,MAAkCjB,mBAAS,WAA3C,mBAAOkB,EAAP,KAAkBC,EAAlB,KACA,EAAgCnB,oBAAS,GAAzC,mBAAOoB,EAAP,KAAiBC,EAAjB,KAEMC,EAAmB,SAACC,GACxBA,EAAMC,iBACNH,GAAY,IAGRI,EAAkB,WACtBJ,GAAY,IAmBd,OAhBAf,qBAAU,WACR,IAAMoB,EAAUlB,OAAOC,aAAY,WACjCU,EArBN,WACE,IAAMQ,EAAQ1B,KAAK2B,MAAMC,WAAWhB,OAAO,GAE3C,MAAM,SAAN,OAAgBc,GAkBCG,MACZ,MAKH,OAHAtB,OAAOuB,iBAAiB,cAAeT,GACvCd,OAAOuB,iBAAiB,QAASN,GAE1B,WACLjB,OAAOM,cAAcY,GAErBlB,OAAOwB,oBAAoB,cAAeV,GAC1Cd,OAAOwB,oBAAoB,QAASP,MAErC,IAGD,sBAAKT,UAAU,MAAf,UACE,6CAECI,GAAa,cAAC,EAAD,CAAOrB,KAAMmB,QCxCjCe,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,U","file":"static/js/main.29e8e1a4.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\n\ninterface Props {\n  name: string,\n}\n\nexport const Clock: React.FC<Props> = ({ name }) => {\n  const [today, setToday] = useState(new Date());\n  const [cName, setCName] = useState(name);\n\n  useEffect(() => {\n    const date = window.setInterval(() => {\n      setToday(new Date());\n      // eslint-disable-next-line no-console\n      console.info(new Date().toUTCString().slice(-12, -4));\n    }, 1000);\n\n    return () => {\n      window.clearInterval(date);\n    };\n  }, []);\n\n  useEffect(() => {\n    if (name !== cName) {\n      // eslint-disable-next-line no-console\n      console.debug(`Renamed to ${name}`);\n      setCName(name);\n    }\n  }, [name]);\n\n  return (\n    <div className=\"Clock\">\n      <strong className=\"Clock__name\">\n        {name}\n      </strong>\n\n      {' time is '}\n\n      <span className=\"Clock__time\">\n        {today.toUTCString().slice(-12, -4)}\n      </span>\n    </div>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport './App.scss';\nimport { Clock } from './Clock';\n\nfunction getRandomName(): string {\n  const value = Date.now().toString().slice(-4);\n\n  return `Clock-${value}`;\n}\n\nexport const App: React.FC = () => {\n  const [clockName, setClockName] = useState('Clock-0');\n  const [hasClock, setHasClock] = useState(true);\n\n  const handleRightClick = (event: MouseEvent) => {\n    event.preventDefault();\n    setHasClock(false);\n  };\n\n  const handleLeftClick = () => {\n    setHasClock(true);\n  };\n\n  useEffect(() => {\n    const timerId = window.setInterval(() => {\n      setClockName(getRandomName());\n    }, 3300);\n\n    window.addEventListener('contextmenu', handleRightClick);\n    window.addEventListener('click', handleLeftClick);\n\n    return () => {\n      window.clearInterval(timerId);\n\n      window.removeEventListener('contextmenu', handleRightClick);\n      window.removeEventListener('click', handleLeftClick);\n    };\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <h1>React clock</h1>\n\n      {hasClock && (<Clock name={clockName} />)}\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}